"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

# Import the Path class from pathlib for handling file paths
from pathlib import Path                                         # For handling filesystem paths in a cross-platform way

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR points to the directory containing manage.py
BASE_DIR = Path(__file__).resolve().parent.parent               # Get absolute path to project root directory


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# This key should be kept secret in production environments
SECRET_KEY = 'django-insecure-7xpogezm82szu^bz^^08#^&e5c!32u78$8nu6$3hvc+dos3axv'  # Used for cryptographic signing

# SECURITY WARNING: don't run with debug turned on in production!
# Debug mode should be set to False in production
DEBUG = True                                                    # Enable detailed error pages and debugging features

# List of host/domain names that this Django site can serve
# Empty list means only localhost is allowed
ALLOWED_HOSTS = []                                             # Domains that can serve this Django site


# Application definition
# List of installed Django applications
INSTALLED_APPS = [
    'django.contrib.admin',                                    # Django's built-in admin interface
    'django.contrib.auth',                                     # User authentication system
    'django.contrib.contenttypes',                            # Framework for content types
    'django.contrib.sessions',                                # Session framework for user sessions
    'django.contrib.messages',                                # Framework for displaying messages
    'django.contrib.staticfiles',                             # Framework for serving static files
    'rest_framework',                                         # REST API framework
    'products',                                               # Custom app for product management
]

# Middleware configuration
# List of middleware classes to use
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',           # Handles security features
    'django.contrib.sessions.middleware.SessionMiddleware',    # Manages sessions between requests
    'django.middleware.common.CommonMiddleware',               # Handles common operations
    'django.middleware.csrf.CsrfViewMiddleware',              # Protects against CSRF attacks
    'django.contrib.auth.middleware.AuthenticationMiddleware', # Handles user authentication
    'django.contrib.messages.middleware.MessageMiddleware',    # Enables messaging functionality
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # Prevents clickjacking attacks
]

# Root URL configuration module
ROOT_URLCONF = 'backend.urls'                                 # Main URL routing configuration

# Template configuration
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',  # Template processing engine
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,                                     # Look for templates in app folders
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',  # Adds request object to templates
                'django.contrib.auth.context_processors.auth', # Adds auth context to templates
                'django.contrib.messages.context_processors.messages', # Adds messaging context
            ],
        },
    },
]

# WSGI application path
WSGI_APPLICATION = 'backend.wsgi.application'                 # WSGI application entry point


# Database configuration
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',               # Database backend to use
        'NAME': BASE_DIR / 'db.sqlite3',                      # Database file location
    }
}


# Password validation settings
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',  # Prevents similar user attributes
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',            # Enforces minimum password length
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',           # Blocks common passwords
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',          # Prevents numeric-only passwords
    },
]


# Internationalization settings
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'                                       # Default language for the application

TIME_ZONE = 'UTC'                                            # Default timezone setting

USE_I18N = True                                              # Enable translation system

USE_TZ = True                                                # Enable timezone awareness


# Static files configuration (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'                                       # URL prefix for static files

STATICFILES_DIRS = [
    BASE_DIR / 'static' / 'react',
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'         # Type for auto-created primary keys
